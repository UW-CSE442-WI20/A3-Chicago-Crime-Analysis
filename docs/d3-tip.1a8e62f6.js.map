{"version":3,"sources":["d3-tip.js"],"names":["d3","functor","v","tip","direction","d3_tip_direction","offset","d3_tip_offset","html","d3_tip_html","node","initNode","svg","point","target","vis","getSVGNode","el","tagName","toLowerCase","ownerSVGElement","createSVGPoint","document","body","appendChild","show","args","Array","prototype","slice","call","arguments","length","SVGElement","pop","content","coords","apply","poffset","dir","nodel","getNodeEl","i","directions","scrollTop","documentElement","scrollLeft","style","classed","direction_callbacks","top","left","hide","attr","n","selection","styles","Object","keys","forEach","key","destroy","remove","direction_n","bbox","getScreenBBox","y","offsetHeight","x","offsetWidth","s","direction_s","e","direction_e","w","direction_w","nw","direction_nw","ne","direction_ne","sw","direction_sw","se","direction_se","select","createElement","targetel","event","getScreenCTM","parentNode","matrix","tbbox","getBBox","width","height","matrixTransform"],"mappings":"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","file":"d3-tip.1a8e62f6.js","sourceRoot":"../src","sourcesContent":["// d3.tip\n// Copyright (c) 2013 Justin Palmer\n// ES6 / D3 v4 Adaption Copyright (c) 2016 Constantin Gavrilete\n// Removal of ES6 for D3 v4 Adaption Copyright (c) 2016 David Gotz\n//\n// Tooltips for d3.js SVG visualizations\n\nd3.functor = function functor(v) {\n    return typeof v === \"function\" ? v : function() {\n        return v;\n    };\n};\n\nd3.tip = function() {\n\n    var direction = d3_tip_direction,\n        offset    = d3_tip_offset,\n        html      = d3_tip_html,\n        node      = initNode(),\n        svg       = null,\n        point     = null,\n        target    = null\n\n    function tip(vis) {\n        svg = getSVGNode(vis)\n        point = svg.createSVGPoint()\n        document.body.appendChild(node)\n    }\n\n    // Public - show the tooltip on the screen\n    //\n    // Returns a tip\n    tip.show = function() {\n        var args = Array.prototype.slice.call(arguments)\n        if(args[args.length - 1] instanceof SVGElement) target = args.pop()\n\n        var content = html.apply(this, args),\n            poffset = offset.apply(this, args),\n            dir     = direction.apply(this, args),\n            nodel   = getNodeEl(),\n            i       = directions.length,\n            coords,\n            scrollTop  = document.documentElement.scrollTop || document.body.scrollTop,\n            scrollLeft = document.documentElement.scrollLeft || document.body.scrollLeft\n\n        nodel.html(content)\n            .style('position', 'absolute')\n            .style('opacity', 1)\n            .style('pointer-events', 'all')\n\n        while(i--) nodel.classed(directions[i], false)\n        coords = direction_callbacks[dir].apply(this)\n        nodel.classed(dir, true)\n            .style('top', (coords.top +  poffset[0]) + scrollTop + 'px')\n            .style('left', (coords.left + poffset[1]) + scrollLeft + 'px')\n\n        return tip\n    }\n\n    // Public - hide the tooltip\n    //\n    // Returns a tip\n    tip.hide = function() {\n        var nodel = getNodeEl()\n        nodel\n            .style('opacity', 0)\n            .style('pointer-events', 'none')\n        return tip\n    }\n\n    // Public: Proxy attr calls to the d3 tip container.  Sets or gets attribute value.\n    //\n    // n - name of the attribute\n    // v - value of the attribute\n    //\n    // Returns tip or attribute value\n    tip.attr = function(n, v) {\n        if (arguments.length < 2 && typeof n === 'string') {\n            return getNodeEl().attr(n)\n        } else {\n            var args =  Array.prototype.slice.call(arguments)\n            d3.selection.prototype.attr.apply(getNodeEl(), args)\n        }\n\n        return tip\n    }\n\n    // Public: Proxy style calls to the d3 tip container.  Sets or gets a style value.\n    //\n    // n - name of the property\n    // v - value of the property\n    //\n    // Returns tip or style property value\n    tip.style = function(n, v) {\n        // debugger;\n        if (arguments.length < 2 && typeof n === 'string') {\n            return getNodeEl().style(n)\n        } else {\n            var args = Array.prototype.slice.call(arguments);\n            if (args.length === 1) {\n                var styles = args[0];\n                Object.keys(styles).forEach(function(key) {\n                    return d3.selection.prototype.style.apply(getNodeEl(), [key, styles[key]]);\n                });\n            }\n        }\n\n        return tip\n    }\n\n    // Public: Set or get the direction of the tooltip\n    //\n    // v - One of n(north), s(south), e(east), or w(west), nw(northwest),\n    //     sw(southwest), ne(northeast) or se(southeast)\n    //\n    // Returns tip or direction\n    tip.direction = function(v) {\n        if (!arguments.length) return direction\n        direction = v == null ? v : d3.functor(v)\n\n        return tip\n    }\n\n    // Public: Sets or gets the offset of the tip\n    //\n    // v - Array of [x, y] offset\n    //\n    // Returns offset or\n    tip.offset = function(v) {\n        if (!arguments.length) return offset\n        offset = v == null ? v : d3.functor(v)\n\n        return tip\n    }\n\n    // Public: sets or gets the html value of the tooltip\n    //\n    // v - String value of the tip\n    //\n    // Returns html value or tip\n    tip.html = function(v) {\n        if (!arguments.length) return html\n        html = v == null ? v : d3.functor(v)\n\n        return tip\n    }\n\n    // Public: destroys the tooltip and removes it from the DOM\n    //\n    // Returns a tip\n    tip.destroy = function() {\n        if(node) {\n            getNodeEl().remove();\n            node = null;\n        }\n        return tip;\n    }\n\n    function d3_tip_direction() { return 'n' }\n    function d3_tip_offset() { return [0, 0] }\n    function d3_tip_html() { return ' ' }\n\n    var direction_callbacks = {\n        n:  direction_n,\n        s:  direction_s,\n        e:  direction_e,\n        w:  direction_w,\n        nw: direction_nw,\n        ne: direction_ne,\n        sw: direction_sw,\n        se: direction_se\n    };\n\n    var directions = Object.keys(direction_callbacks);\n\n    function direction_n() {\n        var bbox = getScreenBBox()\n        return {\n            top:  bbox.n.y - node.offsetHeight,\n            left: bbox.n.x - node.offsetWidth / 2\n        }\n    }\n\n    function direction_s() {\n        var bbox = getScreenBBox()\n        return {\n            top:  bbox.s.y,\n            left: bbox.s.x - node.offsetWidth / 2\n        }\n    }\n\n    function direction_e() {\n        var bbox = getScreenBBox()\n        return {\n            top:  bbox.e.y - node.offsetHeight / 2,\n            left: bbox.e.x\n        }\n    }\n\n    function direction_w() {\n        var bbox = getScreenBBox()\n        return {\n            top:  bbox.w.y - node.offsetHeight / 2,\n            left: bbox.w.x - node.offsetWidth\n        }\n    }\n\n    function direction_nw() {\n        var bbox = getScreenBBox()\n        return {\n            top:  bbox.nw.y - node.offsetHeight,\n            left: bbox.nw.x - node.offsetWidth\n        }\n    }\n\n    function direction_ne() {\n        var bbox = getScreenBBox()\n        return {\n            top:  bbox.ne.y - node.offsetHeight,\n            left: bbox.ne.x\n        }\n    }\n\n    function direction_sw() {\n        var bbox = getScreenBBox()\n        return {\n            top:  bbox.sw.y,\n            left: bbox.sw.x - node.offsetWidth\n        }\n    }\n\n    function direction_se() {\n        var bbox = getScreenBBox()\n        return {\n            top:  bbox.se.y,\n            left: bbox.e.x\n        }\n    }\n\n    function initNode() {\n        var node = d3.select(document.createElement('div'))\n        node\n            .style('position', 'absolute')\n            .style('top', '0')\n            .style('opacity', '0')\n            .style('pointer-events', 'none')\n            .style('box-sizing', 'border-box')\n\n        return node.node()\n    }\n\n    function getSVGNode(el) {\n        el = el.node()\n        if(el.tagName.toLowerCase() === 'svg')\n            return el\n\n        return el.ownerSVGElement\n    }\n\n    function getNodeEl() {\n        if(node === null) {\n            node = initNode();\n            // re-add node to DOM\n            document.body.appendChild(node);\n        };\n        return d3.select(node);\n    }\n\n    // Private - gets the screen coordinates of a shape\n    //\n    // Given a shape on the screen, will return an SVGPoint for the directions\n    // n(north), s(south), e(east), w(west), ne(northeast), se(southeast), nw(northwest),\n    // sw(southwest).\n    //\n    //    +-+-+\n    //    |   |\n    //    +   +\n    //    |   |\n    //    +-+-+\n    //\n    // Returns an Object {n, s, e, w, nw, sw, ne, se}\n    function getScreenBBox() {\n        var targetel   = target || d3.event.target;\n\n        while ('undefined' === typeof targetel.getScreenCTM && 'undefined' === targetel.parentNode) {\n            targetel = targetel.parentNode;\n        }\n\n        var bbox       = {},\n            matrix     = targetel.getScreenCTM(),\n            tbbox      = targetel.getBBox(),\n            width      = tbbox.width,\n            height     = tbbox.height,\n            x          = tbbox.x,\n            y          = tbbox.y\n\n        point.x = x\n        point.y = y\n        bbox.nw = point.matrixTransform(matrix)\n        point.x += width\n        bbox.ne = point.matrixTransform(matrix)\n        point.y += height\n        bbox.se = point.matrixTransform(matrix)\n        point.x -= width\n        bbox.sw = point.matrixTransform(matrix)\n        point.y -= height / 2\n        bbox.w  = point.matrixTransform(matrix)\n        point.x += width\n        bbox.e = point.matrixTransform(matrix)\n        point.x -= width / 2\n        point.y -= height / 2\n        bbox.n = point.matrixTransform(matrix)\n        point.y += height\n        bbox.s = point.matrixTransform(matrix)\n\n        return bbox\n    }\n\n    return tip\n};"]}